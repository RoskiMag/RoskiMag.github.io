{"ast":null,"code":"import _classCallCheck from \"/Users/timmymalaney/Desktop/site_test/roskimag.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timmymalaney/Desktop/site_test/roskimag.github.io/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timmymalaney/Desktop/site_test/roskimag.github.io/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timmymalaney/Desktop/site_test/roskimag.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timmymalaney/Desktop/site_test/roskimag.github.io/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timmymalaney/Desktop/site_test/roskimag.github.io/src/components/ViewSubmissions.jsx\";\nimport React, { Component } from 'react';\nimport './css/ViewSubmissions.css';\nimport firebase from './Firebase';\n\nvar ViewSubmissions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewSubmissions, _Component);\n\n  function ViewSubmissions(props) {\n    var _this;\n\n    _classCallCheck(this, ViewSubmissions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewSubmissions).call(this, props));\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var submissions = [];\n      querySnapshot.forEach(function (doc) {\n        var _doc$data = doc.data(),\n            name = _doc$data.name,\n            title = _doc$data.title,\n            email = _doc$data.email,\n            medium = _doc$data.medium,\n            year = _doc$data.year,\n            dateCompleted = _doc$data.dateCompleted,\n            school = _doc$data.school,\n            websiteLink = _doc$data.websiteLink,\n            artistStatement = _doc$data.artistStatement,\n            link = _doc$data.link;\n\n        boards.push({\n          key: doc.id,\n          doc: doc,\n          // DocumentSnapshot\n          title: title,\n          description: description,\n          author: author\n        });\n      });\n\n      _this.setState({\n        submissions: submissions\n      });\n    };\n\n    _this.ref = firebase.firestore().collection('submissions');\n    _this.unsubscribe = null;\n    _this.state = {\n      submissions: []\n    };\n    return _this;\n  }\n\n  _createClass(ViewSubmissions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ViewSubmissions;\n}(Component);\n\nexport { ViewSubmissions as default };","map":{"version":3,"sources":["/Users/timmymalaney/Desktop/site_test/roskimag.github.io/src/components/ViewSubmissions.jsx"],"names":["React","Component","firebase","ViewSubmissions","props","onCollectionUpdate","querySnapshot","submissions","forEach","doc","data","name","title","email","medium","year","dateCompleted","school","websiteLink","artistStatement","link","boards","push","key","id","description","author","setState","ref","firestore","collection","unsubscribe","state","onSnapshot"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,2BAAP;AAEA,OAAOC,QAAP,MAAqB,YAArB;;IAEqBC,e;;;;;AACjB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;;AADe,UASnBC,kBATmB,GASE,UAACC,aAAD,EAAmB;AACpC,UAAMC,WAAW,GAAG,EAApB;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAsB,UAACC,GAAD,EAAS;AAAA,wBAC2EA,GAAG,CAACC,IAAJ,EAD3E;AAAA,YACrBC,IADqB,aACrBA,IADqB;AAAA,YACfC,KADe,aACfA,KADe;AAAA,YACRC,KADQ,aACRA,KADQ;AAAA,YACDC,MADC,aACDA,MADC;AAAA,YACOC,IADP,aACOA,IADP;AAAA,YACaC,aADb,aACaA,aADb;AAAA,YAC4BC,MAD5B,aAC4BA,MAD5B;AAAA,YACoCC,WADpC,aACoCA,WADpC;AAAA,YACiDC,eADjD,aACiDA,eADjD;AAAA,YACkEC,IADlE,aACkEA,IADlE;;AAE7BC,QAAAA,MAAM,CAACC,IAAP,CAAY;AACVC,UAAAA,GAAG,EAAEd,GAAG,CAACe,EADC;AAEVf,UAAAA,GAAG,EAAHA,GAFU;AAEL;AACLG,UAAAA,KAAK,EAALA,KAHU;AAIVa,UAAAA,WAAW,EAAXA,WAJU;AAKVC,UAAAA,MAAM,EAANA;AALU,SAAZ;AAOD,OATD;;AAUA,YAAKC,QAAL,CAAc;AACZpB,QAAAA,WAAW,EAAXA;AADY,OAAd;AAGD,KAxBgB;;AAEf,UAAKqB,GAAL,GAAW1B,QAAQ,CAAC2B,SAAT,GAAqBC,UAArB,CAAgC,aAAhC,CAAX;AACA,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,KAAL,GAAa;AACTzB,MAAAA,WAAW,EAAE;AADJ,KAAb;AAJe;AAOlB;;;;wCAmBmB;AAChB,WAAKwB,WAAL,GAAmB,KAAKH,GAAL,CAASK,UAAT,CAAoB,KAAK5B,kBAAzB,CAAnB;AACH;;;6BAEQ;AACT,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKD;;;;EArC0CJ,S;;SAAxBE,e","sourcesContent":["import React, { Component } from 'react';\nimport './css/ViewSubmissions.css';\n\nimport firebase from './Firebase';\n\nexport default class ViewSubmissions extends Component {\n    constructor(props) {\n        super(props);\n        this.ref = firebase.firestore().collection('submissions');\n        this.unsubscribe = null;\n        this.state = {\n            submissions: []\n        };\n    }\n\n    onCollectionUpdate = (querySnapshot) => {\n        const submissions = [];\n        querySnapshot.forEach((doc) => {\n          const { name, title, email, medium, year, dateCompleted, school, websiteLink, artistStatement, link } = doc.data();\n          boards.push({\n            key: doc.id,\n            doc, // DocumentSnapshot\n            title,\n            description,\n            author,\n          });\n        });\n        this.setState({\n          submissions\n       });\n      }\n\n    componentDidMount() {\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n    }\n\n    render() {\n    return (\n        <div>\n        \n        </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}