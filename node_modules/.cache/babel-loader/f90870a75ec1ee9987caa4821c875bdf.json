{"ast":null,"code":"import _classCallCheck from \"/Users/timmymalaney/Desktop/site_test/roskimag.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timmymalaney/Desktop/site_test/roskimag.github.io/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timmymalaney/Desktop/site_test/roskimag.github.io/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timmymalaney/Desktop/site_test/roskimag.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timmymalaney/Desktop/site_test/roskimag.github.io/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timmymalaney/Desktop/site_test/roskimag.github.io/src/components/ViewSubmissions.jsx\";\nimport React, { Component } from 'react';\nimport './css/ViewSubmissions.css';\nimport firebase from './Firebase';\n\nvar ViewSubmissions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewSubmissions, _Component);\n\n  function ViewSubmissions(props) {\n    var _this;\n\n    _classCallCheck(this, ViewSubmissions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewSubmissions).call(this, props));\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var submissions = [];\n      querySnapshot.forEach(function (doc) {\n        var _doc$data = doc.data(),\n            name = _doc$data.name,\n            title = _doc$data.title,\n            email = _doc$data.email,\n            medium = _doc$data.medium,\n            year = _doc$data.year,\n            dateCompleted = _doc$data.dateCompleted,\n            school = _doc$data.school,\n            websiteLink = _doc$data.websiteLink,\n            artistStatement = _doc$data.artistStatement,\n            link = _doc$data.link;\n\n        submissions.push({\n          key: doc.id,\n          doc: doc,\n          // DocumentSnapshot\n          name: name,\n          title: title,\n          email: email,\n          medium: medium,\n          year: year,\n          dateCompleted: dateCompleted,\n          school: school,\n          websiteLink: websiteLink,\n          artistStatement: artistStatement,\n          link: link\n        });\n      });\n\n      _this.setState({\n        submissions: submissions\n      });\n    };\n\n    _this.ref = firebase.firestore().collection('submissions');\n    _this.unsubscribe = null;\n    _this.state = {\n      submissions: []\n    };\n    return _this;\n  }\n\n  _createClass(ViewSubmissions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"title\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"email\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.submissions.map(function (submission) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, submission.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, submission.title), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, submission.email));\n      }))));\n    }\n  }]);\n\n  return ViewSubmissions;\n}(Component);\n\nexport { ViewSubmissions as default };","map":{"version":3,"sources":["/Users/timmymalaney/Desktop/site_test/roskimag.github.io/src/components/ViewSubmissions.jsx"],"names":["React","Component","firebase","ViewSubmissions","props","onCollectionUpdate","querySnapshot","submissions","forEach","doc","data","name","title","email","medium","year","dateCompleted","school","websiteLink","artistStatement","link","push","key","id","setState","ref","firestore","collection","unsubscribe","state","onSnapshot","map","submission"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './css/ViewSubmissions.css';\n\nimport firebase from './Firebase';\n\nexport default class ViewSubmissions extends Component {\n    constructor(props) {\n        super(props);\n        this.ref = firebase.firestore().collection('submissions');\n        this.unsubscribe = null;\n        this.state = {\n            submissions: []\n        };\n    }\n\n    onCollectionUpdate = (querySnapshot) => {\n        const submissions = [];\n        querySnapshot.forEach((doc) => {\n          const { name, title, email, medium, year, dateCompleted, school, websiteLink, artistStatement, link } = doc.data();\n          submissions.push({\n            key: doc.id,\n            doc, // DocumentSnapshot\n            name, title, email, medium, year, dateCompleted, school, websiteLink, artistStatement, link\n          });\n        });\n        this.setState({\n          submissions\n       });\n      }\n\n    componentDidMount() {\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n    }\n\n    render() {\n    return (\n        <div>\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>title</th>\n                  <th>email</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.submissions.map(submission =>\n                  <tr>\n                    <td>{submission.name}</td>\n                    <td>{submission.title}</td>\n                    <td>{submission.email}</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n        </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}